FORMAT: 1A
TITLE: FIWARE-GlanceSync API v1 Specification
DATE: 24 November 2015
VERSION: v1.0
APIARY_PROJECT: glancesync


# FIWARE GlanceSync

<!--
Copyright 2015 Telefónica I+D
All Rights Reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.
-->

The FIWARE GlanceSync tools is developed under the FIWARE Ops tool 
and it is used to synchronise the glance images in the different 
Glance servers connected in the FIWARE Lab.

Although this component has been developed for FIWARE, the software 
is highly configurable, do not have special requirements beyond 
OpenStack libraries and may be used with any other project or as 
a generic tool to synchronise images. Moreover, all the OpenStack 
interface is in a module and it is possible to adapt the code to 
support other platforms.

## Editors

  + Fernando López Aguilar, Telefónica I+D

## Copyright

This specification is licensed under the
[FIWARE Open Specification License](http://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FI-WARE_Open_Specification_Legal_Notice_%28essential_patents_license%29).

## Status

Final version aligned with FIWARE Release 5.1.


# Group glancesync v1

## API authentication
All the operations, except the information of the service, in the 
GlanceSync API needs to have a valid token to access it. To obtain 
the token, you need to have an account in FIWARE Lab 
(account.lab.fi-ware.org). With the credentials (username, password 
and tenantName) you can obtain a valid token.

The GlanceSync API returns the 404 Not Found error code if you provide 
a token that it is not validate or it is expired. Besides, GlanceSync 
API returns the 401 Unauthorized error code if the role of the token 
is not authorized to realize the operation.

## Faults

The error code is returned in the body of the response for convenience. 
The message section returns a human-readable message that is appropriate 
for display to the end user. The details section is optional and may 
contain information—for example, a stack trace—to assist in tracking 
down an error. The detail section may or may not be appropriate for 
display to an end user.

<table>
    <tr><td><b>Fault Element</b></td><td><b>HTTP code</b></td><td><b>Description</b></td></tr>
    <tr><td>Compute Fault</td><td>400, 500, other codes possible</td><td>Error in the operation</td></tr>
    <tr><td>serviceUnavailable</td><td>503</td><td>The service is not available</td></tr>
    <tr><td>badRequest</td><td>400</td><td>The request has not been done correctly</td></tr>
    <tr><td>unauthorized</td><td>401</td><td>You are not authorized to access to that operation. The token is not correct.</td></tr>
    <tr><td>itemNotFound</td><td>404</td><td>It is not exist</td></tr>
    <tr><td>badMethod</td><td>405</td><td>Method not allowed</td></tr>
    <tr><td>badRegion</td><td>410</td><td>Region does not exist</td></tr>
</table>

## GlanceSync synchronization status

The synchronisation status can be classified in three categories: final status, error 
status and pending synchronisation status. The different values can be shown in the
following table:

<table>
    <tr><td><b>GlanceSync Status</b></td><td><b>Description</b></td></tr>
    <tr><td>ok</td><td>The image is fully synchronised.</td></tr>
    <tr><td>ok_stalled_checksum</td><td>The image has a different checksum than master, but this 
checksum is included in parameter 'dontupdate'. Therefore the image will not be 
updated (content nor metadata)</td></tr>

    <tr><td>error_checksum</td><td>There is an image, but with a different checksum and there is 
not a matching dontupdate, rename or replace directive. Action required: fill 
the checksum (or use any) with dontupdate or rename or replace.</td></tr>

    <tr><td>error_ami</td><td>The image requires a kernel or ramdisk that is not in the list of 
images to sync. Action required: ensure that the selection criteria include the 
kernel/ramdisk images.</td></tr>

    <tr><td>pending_metadata</td><td>There is an image with the right content (checksum), but 
metadata must be updated (this may include ramdisk_id and kernel_id).</td></tr>

    <tr><td>pending_upload</td><td>The image is not synchronised; it must be upload.</td></tr>

    <tr><td>pending_replace</td><td>There is an image, but with different checksum. The image 
will be replaced.</td></tr>

    <tr><td>pending_rename</td><td>There is an image, but with different checksum. The image will 
be replaced, but before this the old image will be renamed.</td></tr>

    <tr><td>pending_ami</td><td>The image requires a kernel or ramdisk image that is in state 
pending_upload, pending_replace or pending_rename.</td></tr>
</table>

## GlanceSync tasks execution status

The result of the execution of a task has the following status:

<table>
    <tr><td><b>GlanceSync tasks execution status</b></td><td><b>Description</b></td></tr>
    <tr><td>synced</td><td>The images are synchronized.</td></tr>
    <tr><td>syncing</td><td>The images are synchronizing.</td></tr>
    <tr><td>failed</td><td>The images synchronization images has failed.</td></tr>
</table>

## API version [/]

### Get information about GlanceSync API [GET]

Lists information about GlanceSync API version.

+ Request

        This operation does not accept a request body.

+ Response 200 (application/json)

        {
        "id": "v1.0",
        "owner": "Telefonica I+D",
        "status": "SUPPORTED",
        "version": "1.0",
        "updated": "2011-01-21T11:33:21Z",
        "runningfrom": "2011-01-21T11:33:21Z",
        "href": "https://github.com/telefonicaid/fiware-glancesync",
        }

+ Response 405 (application/json)

        { "error":
                {
                    "message": "Bad method",
                    "code": 405
                }
        }

## Region synchronization [/regions/{regionId}?image={imageName}]

### Images synchronization status in a region [GET]

Lists information the status of the synchronization of the images in the region 
regionid. Keep in mind that regionId is the name of the regions.

+ Parameters
    + regionId (required, string, `Spain2`) ... Region name how you can obtain from the Keystone service.
    + imageName (string, optional, `base_ubuntu_14.04`) ... A filter to apply to the query in order to recover only the information associated to an image identified by its imageName. Only applied to GET operation. Default: no defined value.

+ Request (application/json)

    + Headers
    
            X-Auth-Token: tokenId

+ Response 200 (application/json)
    + Attributes (object)
        + imageName1: base_ubuntu_14.04 (string) - Name of the image in the master (Spain2) node.
        + id: 3cfeaf3f0103b9637bb3fcfe691fce1e (string) - Image id corresponding to the Glance service in the region <regionId>.
        + status: ok (string) - Status of the synchronization of the images. See https://github.com/telefonicaid/fiware-glancesync#checking-status
        + message: lorem ipsum (string) - Error message of the synchronization or null if all was ok.

    + Body
    
            {
                "images": [ {
                    "id": "3cfeaf3f0103b9637bb3fcfe691fce1e",
                    "name": "base_ubuntu_14.04",
                    "status": "ok",
                    "message": null,
                },            
                {
                    "id": "153605c208287ef06a3c84712955c1e9",
                    "name": "base_centos_7",
                    "status": "ok_stalled_checksum",
                    "message": "lorem ipsum",
                },            
                ]
            }

+ Response 410 (application/json)

        { "error":
                {
                    "message": "Bad region",
                    "code": 410
                }
        }

+ Response 405 (application/json)

        { "error":
                {
                    "message": "Bad method",
                    "code": 405
                }
        }


### Synchronize a region [POST]

Synchronize the images of the corresponding region defined by its regionId. The 
operation is asynchronous a response a taskId in order that you can follow the 
execution of the process.


+ Parameters
    + regionId (required, string, `Spain2`) ... Region name how you can obtain from the Keystone service.
    + imageName (string, optional, `base_ubuntu_14.04`) ... A filter to apply to the query in order to recover only the information associated to an image identified by its imageName. Only applied to GET operation. Default: no defined value.

+ Request (application/json)

    + Headers
    
            X-Auth-Token: tokenId

+ Response 200 (application/json)
    + Attributes (object)
        + taskId: aa5da84dc5107e4109611360d2915c6c (string) - Image id corresponding to the Glance service in the region <regionId>.

    + Body
    
            {
                "taskId": "aa5da84dc5107e4109611360d2915c6c",
            }

+ Response 410 (application/json)

        { "error":
                {
                    "message": "Bad region",
                    "code": 410
                }
        }

+ Response 405 (application/json)

        { "error":
                {
                    "message": "Bad method",
                    "code": 405
                }
        }

## Regions Synchronization tasks [/regions/{regionId}/tasks/{taskId}]

### Get the status of a synchronization task [GET]

Get the status of a task to synchronize a region with name regionId. Keep in mind 
that when the returned status is *synced* or *failed*, we have to execute the DELETE 
operation of the task in order to delete the corresponding resources.


+ Parameters
    + regionId (required, string, `Spain2`) ... Region name how you can obtain from the Keystone service.
    + taskId   (required, string, `aa5da84dc5107e4109611360d2915c6c`) ... Task Id. of a synchronization process previously launched.

+ Request (application/json)

    + Headers
    
            X-Auth-Token: tokenId

+ Response 200 (application/json)
    + Attributes (object)
        + taskId: aa5da84dc5107e4109611360d2915c6c (string) - Task Id. of a synchronization process launched.
        + status: synced (string) - Status of the synchronization task corresponding to the region regionId and task taskId.

    + Body
    
            {
                "taskId": "aa5da84dc5107e4109611360d2915c6c",
                "status": "synced",
            }

+ Response 200 (application/json)

        { "error":
                {
                    "message": "Bad region",
                    "code": 410
                }
        }

+ Response 405 (application/json)

        { "error":
                {
                    "message": "Bad method",
                    "code": 405
                }
        }

+ Response 404 (application/json)

        { "error":
                {
                    "message": "Item not found",
                    "code": 404
                }
        }

### Delete a Synchronization task [DELETE]

Delete the information related to an executed task. This operation does not accept 
a request body and does not return a response body.

+ Parameters
    + regionId (required, string, `Spain2`) ... Region name how you can obtain from the Keystone service.
    + taskId   (required, string, `aa5da84dc5107e4109611360d2915c6c`) ... Task Id. of a synchronization process previously launched.

+ Request (application/json)

    + Headers
    
            X-Auth-Token: tokenId

+ Response 200

+ Response 410 (application/json)

        { "error":
                {
                    "message": "Bad region",
                    "code": 410
                }
        }

+ Response 405 (application/json)

        { "error":
                {
                    "message": "Bad method",
                    "code": 405
                }
        }

+ Response 404 (application/json)

        { "error":
                {
                    "message": "Item not found",
                    "code": 404
                }
        }
